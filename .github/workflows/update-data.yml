# .github/workflows/update-data.yml
# Automatically fetch and update gold KPI data every 6 hours

name: Update Gold Dashboard Data

on:
  # Run every 6 hours (at 00:00, 06:00, 12:00, 18:00 UTC)
  schedule:
    - cron: '0 */6 * * *'
  
  # Allow manual trigger from GitHub Actions tab
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update all data'
        required: false
        default: 'true'

# Only allow one update at a time
concurrency:
  group: data-update
  cancel-in-progress: false

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci --only=production
      
      # 4. Fetch latest data from APIs
      - name: Fetch latest data
        env:
          ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
          FRED_KEY: ${{ secrets.FRED_KEY }}
          TWELVE_DATA_KEY: ${{ secrets.TWELVE_DATA_KEY }}
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        run: |
          echo "Starting data fetch at $(date)"
          node scripts/update-data.js
          echo "Data fetch completed at $(date)"
      
      # 5. Check if data changed
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code public/data/ || echo "changed=true" >> $GITHUB_OUTPUT
      
      # 6. Commit updated data (if changed)
      - name: Commit updated data
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add public/data/*.json
          git commit -m "üìä Auto-update: $(date +'%Y-%m-%d %H:%M UTC')"
          git push
      
      # 7. No changes
      - name: No changes detected
        if: steps.git-check.outputs.changed != 'true'
        run: |
          echo "‚úì No data changes detected - skipping commit"
      
      # 8. Summary
      - name: Generate summary
        if: always()
        run: |
          echo "### üìä Data Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Run time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Data changed:** ${{ steps.git-check.outputs.changed || 'false' }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f public/data/gold-price.json ]; then
            echo "- ‚úì Gold price data updated" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f public/data/fed-policy.json ]; then
            echo "- ‚úì Fed policy data updated" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f public/data/dollar-index.json ]; then
            echo "- ‚úì Dollar index data updated" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Next scheduled run: In 6 hours" >> $GITHUB_STEP_SUMMARY

# Optional: Notify on failure
  notify-on-failure:
    needs: update-data
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Create failure issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '‚ùå Data Update Failed - ' + new Date().toISOString(),
              body: 'The scheduled data update workflow failed. Check the [workflow run](' + 
                    context.payload.repository.html_url + '/actions/runs/' + context.runId + ') for details.',
              labels: ['automated', 'bug']
            })